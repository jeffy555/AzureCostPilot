{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/models/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAwqBH,2EAA2E;AAC3E,IAAY,uBAiBX;AAjBD,WAAY,uBAAuB;IACjC,uCAAuC;IACvC,wDAA6B,CAAA;IAC7B,sCAAsC;IACtC,sCAAW,CAAA;IACX,gCAAgC;IAChC,4CAAiB,CAAA;IACjB,gCAAgC;IAChC,4CAAiB,CAAA;IACjB,+BAA+B;IAC/B,0CAAe,CAAA;IACf,iCAAiC;IACjC,8CAAmB,CAAA;IACnB,gCAAgC;IAChC,4CAAiB,CAAA;IACjB,iCAAiC;IACjC,8CAAmB,CAAA;AACrB,CAAC,EAjBW,uBAAuB,uCAAvB,uBAAuB,QAiBlC;AAkBD,4EAA4E;AAC5E,IAAY,wBAKX;AALD,WAAY,wBAAwB;IAClC,uEAAuE;IACvE,yCAAa,CAAA;IACb,oGAAoG;IACpG,qDAAyB,CAAA;AAC3B,CAAC,EALW,wBAAwB,wCAAxB,wBAAwB,QAKnC;AAYD,0FAA0F;AAC1F,IAAY,sCASX;AATD,WAAY,sCAAsC;IAChD,mBAAmB;IACnB,uEAA6B,CAAA;IAC7B,eAAe;IACf,+DAAqB,CAAA;IACrB,kBAAkB;IAClB,qEAA2B,CAAA;IAC3B,gBAAgB;IAChB,iEAAuB,CAAA;AACzB,CAAC,EATW,sCAAsC,sDAAtC,sCAAsC,QASjD;AAcD,6EAA6E;AAC7E,IAAY,yBAGX;AAHD,WAAY,yBAAyB;IACnC,eAAe;IACf,kDAAqB,CAAA;AACvB,CAAC,EAHW,yBAAyB,yCAAzB,yBAAyB,QAGpC;AAWD,mFAAmF;AACnF,IAAY,+BAKX;AALD,WAAY,+BAA+B;IACzC,WAAW;IACX,gDAAa,CAAA;IACb,YAAY;IACZ,kDAAe,CAAA;AACjB,CAAC,EALW,+BAA+B,+CAA/B,+BAA+B,QAK1C;AAYD,2EAA2E;AAC3E,IAAY,uBAOX;AAPD,WAAY,uBAAuB;IACjC,oFAAoF;IACpF,8CAAmB,CAAA;IACnB,gHAAgH;IAChH,0CAAe,CAAA;IACf,sGAAsG;IACtG,4CAAiB,CAAA;AACnB,CAAC,EAPW,uBAAuB,uCAAvB,uBAAuB,QAOlC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Microsoft.Resources operations. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Microsoft.Resources operation */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft.Resources */\n  provider?: string;\n  /** Resource on which the operation is performed: Profile, endpoint, etc. */\n  resource?: string;\n  /** Operation type: Read, write, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** An error response for a resource management request. */\nexport interface CloudError {\n  /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\n  error?: ErrorResponse;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\nexport interface ErrorResponse {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorResponse[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Resource provider information. */\nexport interface Provider {\n  /**\n   * The provider ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The namespace of the resource provider. */\n  namespace?: string;\n  /**\n   * The registration state of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationState?: string;\n  /**\n   * The registration policy of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationPolicy?: string;\n  /**\n   * The collection of provider resource types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceTypes?: ProviderResourceType[];\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Resource type managed by the resource provider. */\nexport interface ProviderResourceType {\n  /** The resource type. */\n  resourceType?: string;\n  /** The collection of locations where this resource type can be created. */\n  locations?: string[];\n  /** The location mappings that are supported by this resource type. */\n  locationMappings?: ProviderExtendedLocation[];\n  /** The aliases that are supported by this resource type. */\n  aliases?: Alias[];\n  /** The API version. */\n  apiVersions?: string[];\n  /**\n   * The default API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultApiVersion?: string;\n  zoneMappings?: ZoneMapping[];\n  /**\n   * The API profiles for the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiProfiles?: ApiProfile[];\n  /** The additional capabilities offered by this resource type. */\n  capabilities?: string;\n  /** The properties. */\n  properties?: { [propertyName: string]: string };\n}\n\n/** The provider extended location. */\nexport interface ProviderExtendedLocation {\n  /** The azure location. */\n  location?: string;\n  /** The extended location type. */\n  type?: string;\n  /** The extended locations for the azure location. */\n  extendedLocations?: string[];\n}\n\n/** The alias type. */\nexport interface Alias {\n  /** The alias name. */\n  name?: string;\n  /** The paths for an alias. */\n  paths?: AliasPath[];\n  /** The type of the alias. */\n  type?: AliasType;\n  /** The default path for an alias. */\n  defaultPath?: string;\n  /** The default pattern for an alias. */\n  defaultPattern?: AliasPattern;\n  /**\n   * The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultMetadata?: AliasPathMetadata;\n}\n\n/** The type of the paths for alias. */\nexport interface AliasPath {\n  /** The path of an alias. */\n  path?: string;\n  /** The API versions. */\n  apiVersions?: string[];\n  /** The pattern for an alias path. */\n  pattern?: AliasPattern;\n  /**\n   * The metadata of the alias path. If missing, fall back to the default metadata of the alias.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: AliasPathMetadata;\n}\n\n/** The type of the pattern for an alias path. */\nexport interface AliasPattern {\n  /** The alias pattern phrase. */\n  phrase?: string;\n  /** The alias pattern variable. */\n  variable?: string;\n  /** The type of alias pattern */\n  type?: AliasPatternType;\n}\n\nexport interface AliasPathMetadata {\n  /**\n   * The type of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: AliasPathTokenType;\n  /**\n   * The attributes of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly attributes?: AliasPathAttributes;\n}\n\nexport interface ZoneMapping {\n  /** The location of the zone mapping. */\n  location?: string;\n  zones?: string[];\n}\n\nexport interface ApiProfile {\n  /**\n   * The profile version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileVersion?: string;\n  /**\n   * The API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersion?: string;\n}\n\n/** List of provider permissions. */\nexport interface ProviderPermissionListResult {\n  /** An array of provider permissions. */\n  value?: ProviderPermission[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The provider permission */\nexport interface ProviderPermission {\n  /** The application id. */\n  applicationId?: string;\n  /** Role definition properties. */\n  roleDefinition?: RoleDefinition;\n  /** Role definition properties. */\n  managedByRoleDefinition?: RoleDefinition;\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Role definition properties. */\nexport interface RoleDefinition {\n  /** The role definition ID. */\n  id?: string;\n  /** The role definition name. */\n  name?: string;\n  /** If this is a service role. */\n  isServiceRole?: boolean;\n  /** Role definition permissions. */\n  permissions?: Permission[];\n  /** Role definition assignable scopes. */\n  scopes?: string[];\n}\n\n/** Role definition permissions. */\nexport interface Permission {\n  /** Allowed actions. */\n  actions?: string[];\n  /** Denied actions. */\n  notActions?: string[];\n  /** Allowed Data actions. */\n  dataActions?: string[];\n  /** Denied Data actions. */\n  notDataActions?: string[];\n}\n\n/** The provider registration definition. */\nexport interface ProviderRegistrationRequest {\n  /** The provider consent. */\n  thirdPartyProviderConsent?: ProviderConsentDefinition;\n}\n\n/** The provider consent. */\nexport interface ProviderConsentDefinition {\n  /** A value indicating whether authorization is consented or not. */\n  consentToAuthorization?: boolean;\n}\n\n/** List of resource providers. */\nexport interface ProviderListResult {\n  /** An array of resource providers. */\n  value?: Provider[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource types of a resource provider. */\nexport interface ProviderResourceTypeListResult {\n  /** An array of resource types. */\n  value?: ProviderResourceType[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource groups. */\nexport interface ResourceListResult {\n  /** An array of resources. */\n  value?: GenericResourceExpanded[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Plan for the resource. */\nexport interface Plan {\n  /** The plan ID. */\n  name?: string;\n  /** The publisher ID. */\n  publisher?: string;\n  /** The offer ID. */\n  product?: string;\n  /** The promotion code. */\n  promotionCode?: string;\n  /** The plan's version. */\n  version?: string;\n}\n\n/** SKU for the resource. */\nexport interface Sku {\n  /** The SKU name. */\n  name?: string;\n  /** The SKU tier. */\n  tier?: string;\n  /** The SKU size. */\n  size?: string;\n  /** The SKU family. */\n  family?: string;\n  /** The SKU model. */\n  model?: string;\n  /** The SKU capacity. */\n  capacity?: number;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [propertyName: string]: IdentityUserAssignedIdentitiesValue;\n  };\n}\n\nexport interface IdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Specified resource. */\nexport interface Resource {\n  /**\n   * Resource ID\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location?: string;\n  /** Resource extended location. */\n  extendedLocation?: ExtendedLocation;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Resource extended location. */\nexport interface ExtendedLocation {\n  /** The extended location type. */\n  type?: ExtendedLocationType;\n  /** The extended location name. */\n  name?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroup {\n  /**\n   * The ID of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations. */\n  location: string;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The resource group properties. */\nexport interface ResourceGroupProperties {\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroupPatchable {\n  /** The name of the resource group. */\n  name?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Export resource group template request parameters. */\nexport interface ExportTemplateRequest {\n  /** The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'. */\n  resources?: string[];\n  /** The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization' */\n  options?: string;\n  /** The output format for the exported resources. */\n  outputFormat?: ExportTemplateOutputFormat;\n}\n\n/** Resource group export result. */\nexport interface ResourceGroupExportResult {\n  /** The template content. Used if outputFormat is empty or set to 'Json'. */\n  template?: Record<string, unknown>;\n  /** The formatted export content. Used if outputFormat is set to 'Bicep'. */\n  output?: string;\n  /** The template export error. */\n  error?: ErrorResponse;\n}\n\n/** List of resource groups. */\nexport interface ResourceGroupListResult {\n  /** An array of resource groups. */\n  value?: ResourceGroup[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Parameters of move resources. */\nexport interface ResourcesMoveInfo {\n  /** The IDs of the resources. */\n  resources?: string[];\n  /** The target resource group. */\n  targetResourceGroup?: string;\n}\n\n/** Tag information. */\nexport interface TagValue {\n  /**\n   * The tag value ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag value. */\n  tagValue?: string;\n  /** The tag value count. */\n  count?: TagCount;\n}\n\n/** Tag count. */\nexport interface TagCount {\n  /** Type of count. */\n  type?: string;\n  /** Value of count. */\n  value?: number;\n}\n\n/** Tag details. */\nexport interface TagDetails {\n  /**\n   * The tag name ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag name. */\n  tagName?: string;\n  /** The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0. */\n  count?: TagCount;\n  /** The list of tag values. */\n  values?: TagValue[];\n}\n\n/** List of subscription tags. */\nexport interface TagsListResult {\n  /** An array of tags. */\n  value?: TagDetails[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Wrapper resource for tags API requests and responses. */\nexport interface TagsResource {\n  /**\n   * The ID of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The set of tags. */\n  properties: Tags;\n}\n\n/** A dictionary of name and value pairs. */\nexport interface Tags {\n  /** Dictionary of <string> */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Wrapper resource for tags patch API request only. */\nexport interface TagsPatchResource {\n  /** The operation type for the patch API. */\n  operation?: TagsPatchOperation;\n  /** The set of tags. */\n  properties?: Tags;\n}\n\n/** Resource filter. */\nexport interface GenericResourceFilter {\n  /** The resource type. */\n  resourceType?: string;\n  /** The tag name. */\n  tagname?: string;\n  /** The tag value. */\n  tagvalue?: string;\n}\n\n/** Resource group filter. */\nexport interface ResourceGroupFilter {\n  /** The tag name. */\n  tagName?: string;\n  /** The tag value. */\n  tagValue?: string;\n}\n\n/** Resource provider operation's display properties. */\nexport interface ResourceProviderOperationDisplayProperties {\n  /** Operation description. */\n  publisher?: string;\n  /** Operation provider. */\n  provider?: string;\n  /** Operation resource. */\n  resource?: string;\n  /** Resource provider operation. */\n  operation?: string;\n  /** Operation description. */\n  description?: string;\n}\n\n/** Sub-resource. */\nexport interface SubResource {\n  /** Resource ID */\n  id?: string;\n}\n\n/** Resource information. */\nexport interface GenericResource extends Resource {\n  /** The plan of the resource. */\n  plan?: Plan;\n  /** The resource properties. */\n  properties?: Record<string, unknown>;\n  /** The kind of the resource. */\n  kind?: string;\n  /** ID of the resource that manages this resource. */\n  managedBy?: string;\n  /** The SKU of the resource. */\n  sku?: Sku;\n  /** The identity of the resource. */\n  identity?: Identity;\n}\n\n/** Resource information. */\nexport interface GenericResourceExpanded extends GenericResource {\n  /**\n   * The created time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: Date;\n  /**\n   * The changed time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changedTime?: Date;\n  /**\n   * The provisioning state of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Defines headers for ResourceGroups_delete operation. */\nexport interface ResourceGroupsDeleteHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_createOrUpdateAtScope operation. */\nexport interface TagsCreateOrUpdateAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_updateAtScope operation. */\nexport interface TagsUpdateAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_deleteAtScope operation. */\nexport interface TagsDeleteAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Known values of {@link AliasPathTokenType} that the service accepts. */\nexport enum KnownAliasPathTokenType {\n  /** The token type is not specified. */\n  NotSpecified = \"NotSpecified\",\n  /** The token type can be anything. */\n  Any = \"Any\",\n  /** The token type is string. */\n  String = \"String\",\n  /** The token type is object. */\n  Object = \"Object\",\n  /** The token type is array. */\n  Array = \"Array\",\n  /** The token type is integer. */\n  Integer = \"Integer\",\n  /** The token type is number. */\n  Number = \"Number\",\n  /** The token type is boolean. */\n  Boolean = \"Boolean\",\n}\n\n/**\n * Defines values for AliasPathTokenType. \\\n * {@link KnownAliasPathTokenType} can be used interchangeably with AliasPathTokenType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified**: The token type is not specified. \\\n * **Any**: The token type can be anything. \\\n * **String**: The token type is string. \\\n * **Object**: The token type is object. \\\n * **Array**: The token type is array. \\\n * **Integer**: The token type is integer. \\\n * **Number**: The token type is number. \\\n * **Boolean**: The token type is boolean.\n */\nexport type AliasPathTokenType = string;\n\n/** Known values of {@link AliasPathAttributes} that the service accepts. */\nexport enum KnownAliasPathAttributes {\n  /** The token that the alias path is referring to has no attributes. */\n  None = \"None\",\n  /** The token that the alias path is referring to is modifiable by policies with 'modify' effect. */\n  Modifiable = \"Modifiable\",\n}\n\n/**\n * Defines values for AliasPathAttributes. \\\n * {@link KnownAliasPathAttributes} can be used interchangeably with AliasPathAttributes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: The token that the alias path is referring to has no attributes. \\\n * **Modifiable**: The token that the alias path is referring to is modifiable by policies with 'modify' effect.\n */\nexport type AliasPathAttributes = string;\n\n/** Known values of {@link ProviderAuthorizationConsentState} that the service accepts. */\nexport enum KnownProviderAuthorizationConsentState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Required */\n  Required = \"Required\",\n  /** NotRequired */\n  NotRequired = \"NotRequired\",\n  /** Consented */\n  Consented = \"Consented\",\n}\n\n/**\n * Defines values for ProviderAuthorizationConsentState. \\\n * {@link KnownProviderAuthorizationConsentState} can be used interchangeably with ProviderAuthorizationConsentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Required** \\\n * **NotRequired** \\\n * **Consented**\n */\nexport type ProviderAuthorizationConsentState = string;\n\n/** Known values of {@link ExtendedLocationType} that the service accepts. */\nexport enum KnownExtendedLocationType {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\",\n}\n\n/**\n * Defines values for ExtendedLocationType. \\\n * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationType = string;\n\n/** Known values of {@link ExportTemplateOutputFormat} that the service accepts. */\nexport enum KnownExportTemplateOutputFormat {\n  /** Json */\n  Json = \"Json\",\n  /** Bicep */\n  Bicep = \"Bicep\",\n}\n\n/**\n * Defines values for ExportTemplateOutputFormat. \\\n * {@link KnownExportTemplateOutputFormat} can be used interchangeably with ExportTemplateOutputFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Json** \\\n * **Bicep**\n */\nexport type ExportTemplateOutputFormat = string;\n\n/** Known values of {@link TagsPatchOperation} that the service accepts. */\nexport enum KnownTagsPatchOperation {\n  /** The 'replace' option replaces the entire set of existing tags with a new set. */\n  Replace = \"Replace\",\n  /** The 'merge' option allows adding tags with new names and updating the values of tags with existing names. */\n  Merge = \"Merge\",\n  /** The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs. */\n  Delete = \"Delete\",\n}\n\n/**\n * Defines values for TagsPatchOperation. \\\n * {@link KnownTagsPatchOperation} can be used interchangeably with TagsPatchOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Replace**: The 'replace' option replaces the entire set of existing tags with a new set. \\\n * **Merge**: The 'merge' option allows adding tags with new names and updating the values of tags with existing names. \\\n * **Delete**: The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs.\n */\nexport type TagsPatchOperation = string;\n/** Defines values for AliasPatternType. */\nexport type AliasPatternType = \"NotSpecified\" | \"Extract\";\n/** Defines values for AliasType. */\nexport type AliasType = \"NotSpecified\" | \"PlainText\" | \"Mask\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface ProvidersUnregisterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the unregister operation. */\nexport type ProvidersUnregisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ProvidersProviderPermissionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the providerPermissions operation. */\nexport type ProvidersProviderPermissionsResponse = ProviderPermissionListResult;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterOptionalParams\n  extends coreClient.OperationOptions {\n  /** The third party consent for S2S. */\n  properties?: ProviderRegistrationRequest;\n}\n\n/** Contains response data for the register operation. */\nexport type ProvidersRegisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProvidersListResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type ProvidersListAtTenantScopeResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProvidersGetResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type ProvidersGetAtTenantScopeResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ProvidersListNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type ProvidersListAtTenantScopeNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProviderResourceTypesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProviderResourceTypesListResponse = ProviderResourceTypeListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n  /** The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resources. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ResourcesListByResourceGroupResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesValidateMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n  /** The filter to apply on the operation.<br><br>Filter comparison operators include `eq` (equals) and `ne` (not equals) and may be used with the following properties: `location`, `resourceType`, `name`, `resourceGroup`, `identity`, `identity/principalId`, `plan`, `plan/publisher`, `plan/product`, `plan/name`, `plan/version`, and `plan/promotionCode`.<br><br>For example, to filter by a resource type, use `$filter=resourceType eq 'Microsoft.Network/virtualNetworks'`<br><br><br>`substringof(value, property)` can  be used to filter for substrings of the following currently-supported properties: `name` and `resourceGroup`<br><br>For example, to get all resources with 'demo' anywhere in the resource name, use `$filter=substringof('demo', name)`<br><br>Multiple substring operations can also be combined using `and`/`or` operators.<br><br>Note that any truncated number of results queried via `$top` may also not be compatible when using a filter.<br><br><br>Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use `$filter=tagName eq 'tag1' and tagValue eq 'Value1'`. Note that when resources are filtered by tag name and value, <b>the original tags for each resource will not be returned in the results.</b> Any list of additional properties queried via `$expand` may also not be compatible when filtering by tag names/values. <br><br>For tag names only, resources can be filtered by prefix using the following syntax: `$filter=startswith(tagName, 'depart')`. This query will return all resources with a tag name prefixed by the phrase `depart` (i.e.`department`, `departureDate`, `departureTime`, etc.)<br><br><br>Note that some properties can be combined when filtering resources, which include the following: `substringof() and/or resourceType`, `plan and plan/publisher and plan/name`, and `identity and identity/principalId`. */\n  filter?: string;\n  /** The number of recommendations per page if a paged version of this API is being used. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourcesListResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourcesCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourcesCreateOrUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ResourcesUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourcesGetResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceById operation. */\nexport type ResourcesCheckExistenceByIdResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateById operation. */\nexport type ResourcesCreateOrUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateById operation. */\nexport type ResourcesUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getById operation. */\nexport type ResourcesGetByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ResourcesListByResourceGroupNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourcesListNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourceGroupsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourceGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourceGroupsCreateOrUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets */\n  forceDeletionTypes?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourceGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourceGroupsGetResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ResourceGroupsUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the exportTemplate operation. */\nexport type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1' */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resource groups. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourceGroupsListResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourceGroupsListNextResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface TagsDeleteValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateValue operation. */\nexport type TagsCreateOrUpdateValueResponse = TagValue;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TagsCreateOrUpdateResponse = TagDetails;\n\n/** Optional parameters. */\nexport interface TagsDeleteOptionalParams extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TagsListResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type TagsCreateOrUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateAtScope operation. */\nexport type TagsUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type TagsGetAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface TagsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TagsListNextResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface ResourceManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}